// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ERC20Received extends ethereum.Event {
  get params(): ERC20Received__Params {
    return new ERC20Received__Params(this);
  }
}

export class ERC20Received__Params {
  _event: ERC20Received;

  constructor(event: ERC20Received) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SharesSaleEnded extends ethereum.Event {
  get params(): SharesSaleEnded__Params {
    return new SharesSaleEnded__Params(this);
  }
}

export class SharesSaleEnded__Params {
  _event: SharesSaleEnded;

  constructor(event: SharesSaleEnded) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SharesSaleStarted extends ethereum.Event {
  get params(): SharesSaleStarted__Params {
    return new SharesSaleStarted__Params(this);
  }
}

export class SharesSaleStarted__Params {
  _event: SharesSaleStarted;

  constructor(event: SharesSaleStarted) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maxSharesPerWallet(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get stableCoinAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class SharesSold extends ethereum.Event {
  get params(): SharesSold__Params {
    return new SharesSold__Params(this);
  }
}

export class SharesSold__Params {
  _event: SharesSold;

  constructor(event: SharesSold) {
    this._event = event;
  }

  get wrappedSong(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalCost(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get paymentToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SongSharesMarketPlace__getSaleResultValue0Struct extends ethereum.Tuple {
  get active(): boolean {
    return this[0].toBoolean();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get sharesForSale(): BigInt {
    return this[2].toBigInt();
  }

  get pricePerShare(): BigInt {
    return this[3].toBigInt();
  }

  get maxSharesPerWallet(): BigInt {
    return this[4].toBigInt();
  }

  get totalSold(): BigInt {
    return this[5].toBigInt();
  }

  get stableCoin(): Address {
    return this[6].toAddress();
  }
}

export class SongSharesMarketPlace__salesResult {
  value0: boolean;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Address;

  constructor(
    value0: boolean,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }

  getActive(): boolean {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getSharesForSale(): BigInt {
    return this.value2;
  }

  getPricePerShare(): BigInt {
    return this.value3;
  }

  getMaxSharesPerWallet(): BigInt {
    return this.value4;
  }

  getTotalSold(): BigInt {
    return this.value5;
  }

  getStableCoin(): Address {
    return this.value6;
  }
}

export class SongSharesMarketPlace extends ethereum.SmartContract {
  static bind(address: Address): SongSharesMarketPlace {
    return new SongSharesMarketPlace("SongSharesMarketPlace", address);
  }

  accumulatedFunds(param0: Address): BigInt {
    let result = super.call(
      "accumulatedFunds",
      "accumulatedFunds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_accumulatedFunds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accumulatedFunds",
      "accumulatedFunds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyerPurchases(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "buyerPurchases",
      "buyerPurchases(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)],
    );

    return result[0].toBigInt();
  }

  try_buyerPurchases(
    param0: Address,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyerPurchases",
      "buyerPurchases(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSale(
    wrappedSong: Address,
  ): SongSharesMarketPlace__getSaleResultValue0Struct {
    let result = super.call(
      "getSale",
      "getSale(address):((bool,address,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(wrappedSong)],
    );

    return changetype<SongSharesMarketPlace__getSaleResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getSale(
    wrappedSong: Address,
  ): ethereum.CallResult<SongSharesMarketPlace__getSaleResultValue0Struct> {
    let result = super.tryCall(
      "getSale",
      "getSale(address):((bool,address,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(wrappedSong)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SongSharesMarketPlace__getSaleResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  isApprovedForShares(wrappedSong: Address, seller: Address): boolean {
    let result = super.call(
      "isApprovedForShares",
      "isApprovedForShares(address,address):(bool)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromAddress(seller),
      ],
    );

    return result[0].toBoolean();
  }

  try_isApprovedForShares(
    wrappedSong: Address,
    seller: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForShares",
      "isApprovedForShares(address,address):(bool)",
      [
        ethereum.Value.fromAddress(wrappedSong),
        ethereum.Value.fromAddress(seller),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSaleExpired(wrappedSong: Address): boolean {
    let result = super.call("isSaleExpired", "isSaleExpired(address):(bool)", [
      ethereum.Value.fromAddress(wrappedSong),
    ]);

    return result[0].toBoolean();
  }

  try_isSaleExpired(wrappedSong: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSaleExpired",
      "isSaleExpired(address):(bool)",
      [ethereum.Value.fromAddress(wrappedSong)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  protocolModule(): Address {
    let result = super.call("protocolModule", "protocolModule():(address)", []);

    return result[0].toAddress();
  }

  try_protocolModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolModule",
      "protocolModule():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  saleStartTimes(param0: Address): BigInt {
    let result = super.call(
      "saleStartTimes",
      "saleStartTimes(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_saleStartTimes(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "saleStartTimes",
      "saleStartTimes(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sales(param0: Address): SongSharesMarketPlace__salesResult {
    let result = super.call(
      "sales",
      "sales(address):(bool,address,uint256,uint256,uint256,uint256,address)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new SongSharesMarketPlace__salesResult(
      result[0].toBoolean(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toAddress(),
    );
  }

  try_sales(
    param0: Address,
  ): ethereum.CallResult<SongSharesMarketPlace__salesResult> {
    let result = super.tryCall(
      "sales",
      "sales(address):(bool,address,uint256,uint256,uint256,uint256,address)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SongSharesMarketPlace__salesResult(
        value[0].toBoolean(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toAddress(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _protocolModule(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuySharesCall extends ethereum.Call {
  get inputs(): BuySharesCall__Inputs {
    return new BuySharesCall__Inputs(this);
  }

  get outputs(): BuySharesCall__Outputs {
    return new BuySharesCall__Outputs(this);
  }
}

export class BuySharesCall__Inputs {
  _call: BuySharesCall;

  constructor(call: BuySharesCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BuySharesCall__Outputs {
  _call: BuySharesCall;

  constructor(call: BuySharesCall) {
    this._call = call;
  }
}

export class EndSaleCall extends ethereum.Call {
  get inputs(): EndSaleCall__Inputs {
    return new EndSaleCall__Inputs(this);
  }

  get outputs(): EndSaleCall__Outputs {
    return new EndSaleCall__Outputs(this);
  }
}

export class EndSaleCall__Inputs {
  _call: EndSaleCall;

  constructor(call: EndSaleCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EndSaleCall__Outputs {
  _call: EndSaleCall;

  constructor(call: EndSaleCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StartSaleCall extends ethereum.Call {
  get inputs(): StartSaleCall__Inputs {
    return new StartSaleCall__Inputs(this);
  }

  get outputs(): StartSaleCall__Outputs {
    return new StartSaleCall__Outputs(this);
  }
}

export class StartSaleCall__Inputs {
  _call: StartSaleCall;

  constructor(call: StartSaleCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get maxShares(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _stableCoin(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class StartSaleCall__Outputs {
  _call: StartSaleCall;

  constructor(call: StartSaleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get wrappedSong(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
